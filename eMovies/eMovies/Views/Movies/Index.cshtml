@model IEnumerable<eMovies.Models.Movie>

@{
    ViewData["Title"] = "List of Movies";
}

<button class="filter-toggle-btn" id="filterToggleBtn">
    <i class="bi bi-funnel"></i> 
</button>

<div class="filter-menu" id="filterMenu">
    <form asp-action="Index" method="get" class="filter-sort-container">
        <div>
            <select name="category" id="category">
                <option value="">All Categories</option>
                @foreach (var category in Enum.GetValues(typeof(eMovies.Enums.MovieCategory)))
                {
                    <option value="@category" selected="@(ViewData["SelectedCategory"]?.ToString() == category.ToString())">@category</option>
                }
            </select>
        </div>

        <div>
            <select name="filter" id="filter">
                <option value="">Select Filter</option>
                <option value="LowToHigh" selected="@(ViewData["SelectedPriceFilter"]?.ToString() == "LowToHigh")">Price: Low to High</option>
                <option value="HighToLow" selected="@(ViewData["SelectedPriceFilter"]?.ToString() == "HighToLow")">Price: High to Low</option>
                <option value="asc" selected="@(ViewData["SelectedSortOrder"]?.ToString() == "asc")">Title: A-Z</option>
                <option value="desc" selected="@(ViewData["SelectedSortOrder"]?.ToString() == "desc")">Title: Z-A</option>
            </select>
        </div>

        <div>
            <button type="submit" class="filter-sort-button">Filter</button>
            <button type="button" class="reset-button" onclick="window.location.href='@Url.Action("Index")'">Reset</button>

        </div>
    </form>
</div>


<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 col-xs-6 border-primary mb-3">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0">
                    <div class="col-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.Title
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        <a class="text-white float-end" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                    }

                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.MovieImageURL" alt="@item.Title">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">@item.Description</p>
                            <p class="card-text"><b>Cinema: </b>@item.Cinema.Name</p>
                            <p class="card-text"><b>Category: </b>@item.Category</p>
                            <p class="card-text"><b>Start Date: </b>@item.StartDate.ToString("dd MMMM, yyyy")</p>
                            <p class="card-text"><b>End Date: </b>@item.EndDate.ToString("dd MMMM, yyyy")</p>
                            <p class="card-text ">
                                <b>Status: </b>
                                @if (DateTime.Now >= item.StartDate && DateTime.Now <= item.EndDate)
                                {
                                    <span class="badge bg-success text-white">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.EndDate)
                                {
                                    <span class="badge bg-danger text-white">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">UPCOMMING</span>
                                }
                            </p>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-primary float-end" asp-action="Details" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Show Details
                                </a>
                                <a class="btn btn-success text-white @((DateTime.Now > item.EndDate) ? "disabled" : "")"
                                   asp-controller="Orders"
                                   asp-action="AddItemToShoppingCard"
                                   asp-route-id="@item.Id">
                                    <i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="position-fixed" style="right: 25px; bottom: 25px;">
        <a asp-controller="Movies" asp-action="Create" class="btn btn-success btn-lg d-flex align-items-center gap-2 btn-custom">
            <i class="bi bi-plus-circle"></i> Add New
        </a>
    </div>
}

<div class="pagination-container mt-4">
    <ul class="pagination justify-content-center">
        @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
        {
            var currentPage = (int)ViewData["CurrentPage"];
            var totalPages = (int)ViewData["TotalPages"];

            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { category = ViewData["SelectedCategory"], search = ViewData["SearchQuery"], page = currentPage - 1 })">&laquo;</a>
                </li>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(currentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { category = ViewData["SelectedCategory"], search = ViewData["SearchQuery"], page = i })">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { category = ViewData["SelectedCategory"], search = ViewData["SearchQuery"], page = currentPage + 1 })">&raquo;</a>
                </li>
            }
        }
    </ul>
</div>

@section Scripts {
    <script>
                // Menu effect
        const filterToggleBtn = document.getElementById('filterToggleBtn');
        const filterMenu = document.getElementById('filterMenu');

        filterToggleBtn.addEventListener('click', function() {
            filterMenu.classList.toggle('active');
        });

    </script>
}